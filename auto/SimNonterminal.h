#ifndef _SIMNONTERMINAL_H
#define _SIMNONTERMINAL_H

namespace parser {

enum SimNonterminal {
  DUMMY_START = 100,
  Start = 101,
  TopMemberList = 102,
  TopMemberDeclaration = 103,
  VariableDeclaration = 104,
  MethodDeclaration = 105,
  Type = 106,
  VariableInitializer = 107,
  Expression = 108,
  ArrayInitializer = 109,
  OptionalFormalParameter = 110,
  Block = 111,
  FormalParameterList = 112,
  FormalParameter = 113,
  VariableInitializerList = 114,
  BlockStatementList = 115,
  BlockStatement = 116,
  ExecutionStatement = 117,
  LocalVariableDeclarationStatement = 118,
  OpenStatement = 119,
  CloseStatement = 120,
  IfStatement = 121,
  IfElseOpenStatement = 122,
  WhileOpenStatement = 123,
  ForOpenStatement = 124,
  SimpleStatement = 125,
  IfElseCloseStatement = 126,
  WhileCloseStatement = 127,
  ForCloseStatement = 128,
  EmptyStatement = 129,
  ExpressionStatement = 130,
  BreakStatement = 131,
  ContinueStatement = 132,
  ReturnStatement = 133,
  StatementExpression = 134,
  Assignment = 135,
  MethodInvocation = 136,
  OptionalForInit = 137,
  OptionalForCondition = 138,
  OptionalForUpdate = 139,
  ForInit = 140,
  ConditionalOrExpression = 141,
  ConditionalAndExpression = 142,
  EqualityExpression = 143,
  RelationalExpression = 144,
  InclusiveOrExpression = 145,
  ExclusiveOrExpression = 146,
  AndExpression = 147,
  ShiftExpression = 148,
  AdditiveExpression = 149,
  MultiplicativeExpression = 150,
  UnaryExpression = 151,
  UnaryExpressionNotPlusMinus = 152,
  CastExpression = 153,
  Primary = 154,
  Literal = 155,
  LeftHandSide = 156,
  ArrayAccess = 157,
  OptionalArgumentList = 158,
  ArgumentList = 159,
  XcreaseStatement = 160,
  PrimitiveType = 161
};

}

#endif
