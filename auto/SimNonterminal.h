#ifndef _SIMNONTERMINAL_H
#define _SIMNONTERMINAL_H

namespace parser {

enum SimNonterminal {
  DUMMY_START = 103,
  Start = 104,
  TopMemberList = 105,
  TopMemberDeclaration = 106,
  VariableDeclaration = 107,
  MethodDeclaration = 108,
  Type = 109,
  VariableDeclaratorList = 110,
  VariableDeclarator = 111,
  VariableInitializer = 112,
  Expression = 113,
  ArrayInitializer = 114,
  OptionalFormalParameter = 115,
  Block = 116,
  FormalParameterList = 117,
  FormalParameter = 118,
  VariableInitializerList = 119,
  BlockStatementList = 120,
  BlockStatement = 121,
  ExecutionStatement = 122,
  LocalVariableDeclarationStatement = 123,
  OpenStatement = 124,
  CloseStatement = 125,
  IfStatement = 126,
  IfElseOpenStatement = 127,
  WhileOpenStatement = 128,
  ForOpenStatement = 129,
  SimpleStatement = 130,
  IfElseCloseStatement = 131,
  WhileCloseStatement = 132,
  ForCloseStatement = 133,
  EmptyStatement = 134,
  ExpressionStatement = 135,
  BreakStatement = 136,
  ContinueStatement = 137,
  ReturnStatement = 138,
  StatementExpression = 139,
  Assignment = 140,
  MethodInvocation = 141,
  OptionalForInit = 142,
  OptionalForCondition = 143,
  OptionalForUpdate = 144,
  ForInit = 145,
  ConditionalOrExpression = 146,
  ConditionalAndExpression = 147,
  EqualityExpression = 148,
  RelationalExpression = 149,
  InclusiveOrExpression = 150,
  ExclusiveOrExpression = 151,
  AndExpression = 152,
  ShiftExpression = 153,
  AdditiveExpression = 154,
  MultiplicativeExpression = 155,
  UnaryExpression = 156,
  UnaryExpressionNotPlusMinus = 157,
  CastExpression = 158,
  Primary = 159,
  Literal = 160,
  LeftHandSide = 161,
  ArrayAccess = 162,
  OptionalArgumentList = 163,
  ArgumentList = 164,
  XcreaseStatement = 165,
  PrimitiveType = 166
};

}

#endif
